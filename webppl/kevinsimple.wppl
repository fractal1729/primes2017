var geometric = function() {
  return flip(.5) ? 0 : geometric() + 1;
}

var conditionOnTree = function(tree, concept) {
  condition(tree.length == concept.length);
  map2(
      function(tcirc, ccirc) {
        factor(Gaussian({mu: ccirc["xu"], sigma: ccirc["xs"]}).score(tcirc["x"]));
        factor(Gaussian({mu: ccirc["yu"], sigma: ccirc["ys"]}).score(tcirc["y"]));
      },
      tree,
      concept);
}

var sampleLocation = function() {
  return {"xu": uniform(20,380), "yu": uniform(20,380),
         "xs": uniform(5,50), "ys": uniform(5,50)}
}

var sampleConcept = function() {
  var x = geometric()+1;
  return repeat(x, sampleLocation);
}

var tree = [{"x": 150, "y": 250}, {"x": 200, "y": 100}];

var model = function() {
  var c = sampleConcept();
  conditionOnTree(tree, c);
  return c;
}

sample(Infer({model, method: 'MCMC', samples: 200}))